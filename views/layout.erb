<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Meme Explorer üòé</title>
  <link rel="icon" href="/images/favicon.png">
  <link rel="apple-touch-icon" href="/images/favicon.png">
  <link rel="manifest" href="/manifest.json">
  <link href="https://fonts.googleapis.com/css2?family=Comic+Neue:wght@700&display=swap" rel="stylesheet">

  <style>
    body { font-family: 'Comic Neue', cursive; margin:0; background:#fefefe; transition:0.5s; }
    header { background:linear-gradient(90deg,#ff8a00,#e52e71); color:#fff; padding:20px; text-align:center; position:sticky; top:0; z-index:100; }
    header nav { display:flex; justify-content:center; gap:10px; flex-wrap:wrap; margin-top:10px; }
    header nav a { background: rgba(255,255,255,0.15); color:#fff; padding:8px 14px; border-radius:8px; font-weight:600; text-decoration:none; transition:0.2s; }
    header nav a:hover { background: rgba(255,255,255,0.35); transform: translateY(-2px);}
    main { max-width:700px; margin:40px auto; padding:20px; text-align:center; }
    footer { text-align:center; padding:20px; background:#333; color:#fff;}
    form { text-align:center; margin:20px 0;}
    form input[type=text]{padding:10px;border-radius:12px 0 0 12px;border:1px solid #ccc;width:260px;}
    form button{padding:10px 16px;border:none;border-radius:0 12px 12px 0;background:#e52e71;color:#fff;cursor:pointer;}
    img { max-width:100%; border-radius:12px; margin-top:20px; box-shadow:0 4px 12px rgba(0,0,0,0.2); }
    button.liked { background: #ff4f81 !important; color: #fff; transform: scale(1.05); transition: 0.2s; }
    button.liked:hover { background: #ff769f !important; }
    .meme-subtitle { color:#888; margin-top:5px; }
    .meme-likes { margin-left:10px; font-weight:bold; }
    .nav-buttons { margin-top: 20px; display: flex; justify-content: center; gap: 12px; }
    .nav-buttons button { padding: 10px 18px; border: none; border-radius: 10px; color: white; font-weight: bold; cursor: pointer; transition: 0.2s; }
    #prev-btn { background: #f44336; }
    #next-btn { background: #4caf50; }
    .nav-buttons button:hover { opacity: 0.9; transform: scale(1.05); }
  </style>
</head>
<body>
  <header>
    <h1><a href="/" style="color:white;text-decoration:none;">Meme Explorer üòé</a></h1>
    <nav>
      <a href="/category/funny">Funny</a>
      <a href="/category/wholesome">Wholesome</a>
      <a href="/category/dank">Dank</a>
      <a href="/category/selfcare">Self Care</a>
      <a href="/trending">Trending</a>
      <a href="/metrics">üìà Metrics</a>
      <a href="/random">Random üé≤</a>
    </nav>
  </header>

  <form action="/search" method="get">
    <input type="text" name="q" placeholder="Search memes..." value="<%= params[:q] %>">
    <button>Search</button>
  </form>

  <main>
    <%= yield %>
  </main>

  <footer>
    <p>Built with ‚ù§Ô∏è using Sinatra</p>
  </footer>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const form = document.querySelector("form.like-form");
  const memeImg = document.getElementById("meme-img");
  const memeTitle = document.getElementById("meme-title");
  const memeSub = document.getElementById("meme-subreddit");
  const likesSpan = form?.querySelector(".meme-likes");
  const likeButton = form?.querySelector("button");

  const fetchMeme = async (direction) => {
    try {
      const res = await fetch(`/random.json?direction=${direction}&current_url=${form.querySelector("input[name='url']").value}`);
      const meme = await res.json();

      memeImg.src = meme.url;
      memeImg.alt = meme.title;
      memeTitle.innerText = meme.title;
      memeSub.innerText = meme.subreddit;

      form.querySelector("input[name='url']").value = meme.url;
      likeButton.classList.remove("liked");
      likeButton.textContent = "‚ù§Ô∏è Like";
      likesSpan.textContent = meme.likes || 0;
    } catch (err) {
      console.error("Failed to fetch meme:", err);
    }
  };

  form?.addEventListener("submit", async e => {
    e.preventDefault();
    try {
      const res = await fetch(form.action, {
        method: "POST",
        body: new URLSearchParams(new FormData(form)),
        headers: { "Accept": "application/json" }
      });
      const data = await res.json();
      if (data.liked) {
        likeButton.textContent = "üíî Unlike";
        likeButton.classList.add("liked");
      } else {
        likeButton.textContent = "‚ù§Ô∏è Like";
        likeButton.classList.remove("liked");
      }
      likesSpan.textContent = data.likes;
    } catch (err) {
      alert("Could not update like ‚Äî please try again.");
      console.error(err);
    }
  });

  document.getElementById("prev-btn")?.addEventListener("click", () => fetchMeme("prev"));
  document.getElementById("next-btn")?.addEventListener("click", () => fetchMeme("next"));

  document.addEventListener("keydown", e => {
    if ((e.code === "Space" || e.key === " ") && document.activeElement.tagName !== "INPUT") {
      e.preventDefault();
      fetchMeme("next");
    }
  });
});
</script>
</body>
</html>
